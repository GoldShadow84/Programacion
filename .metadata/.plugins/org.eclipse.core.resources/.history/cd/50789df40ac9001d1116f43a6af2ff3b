/*
 * Hacer un programa que dado el arreglo definido y precargado elimine del arreglo
todas las ocurrencias de una secuencia patrón dada por otro arreglo de iguales
características (solo tiene esa secuencia). Al eliminar se pierden valores haciendo
corrimientos.
 */


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;

public class Tp3_Ej15 {
	public static int MAX = 20;
	public static int MAXVALOR = 9;
	public static int MINVALOR = 1;
	public static double probabilidad = 0.4;
	
	public static void main(String [] args) {
		
		int [] arr = {0,5,3,3,0,0,1,2,3,4,0,3,4,0,7,0,0,2,0,0};
		int [] arrPatron = {1,2,3,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0};
		
		//cargar_arreglo(arr);
		
		imprimir_arreglo(arr);
		
		try {
			BufferedReader entrada = new BufferedReader( new InputStreamReader(System.in));
			
			eliminar_patron_secuencia(arr, arrPatron);
			
		}
		catch(Exception exc) {
			System.out.println(exc);
		}
		
	}
	
	public static void eliminar_patron_secuencia(int [] arr, int [] arrPatron) {
			/*
			 * mirar las secs de arr
			 *  si alguna coincide en tamaño y cantidad de numeros (<= num), hacer corrizq)
			 */
	}
	
	
	
	
	public static void cargar_arreglo(int [] arr) {
		
		Random r = new Random();
		int index = 1;
		arr[0] = 0;
		arr[MAX-1] = 0;
	
		while(index < MAX-1) {
			
			if(r.nextDouble() > probabilidad) {
				
				arr[index] = (r.nextInt(MAXVALOR-MINVALOR+1)+MINVALOR);
				
			}
			else {
				arr[index] = 0;
			}
			
			index++;
		}
		
	}
	
	
	public static void imprimir_arreglo(int [] arr) {
		int index = 0;
		
		System.out.print("Arreglo: ");
		
		while(index < MAX) {
			
			System.out.print("["+arr[index]+"]");
			
			index++;
		}
		
	}
}
