/*
 * Hacer un programa que dado un arreglo ordenado creciente de enteros
de tamaño 10 que se encuentra precargado, solicite al usuario un numero
entero y lo inserte en el arreglo manteniendo su orden. Para ello tendrá
que realizar un corrimiento a derecha (se pierde el último valor del arreglo)
y colocar el numero en el arreglo en la posición indicada.
 */


import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.Random;

public class Tp2_Ej7 {

	public static int MAX = 10;
	public static int MAXVALOR = 9;
	public static int MINVALOR = 1;
	
	public static void main(String [] args) {
		
		int [] arr = new int[MAX];
		int num = 0;
		
		try {
			
			BufferedReader entrada = new BufferedReader(new InputStreamReader(System.in));
			
			cargar_arreglo(arr);
			ordenar_creciente(arr);
			imprimir_arreglo(arr);
			System.out.println("Introduce un Num para insertar: ");
			num = Integer.valueOf(entrada.readLine());
			corrimiento_der(arr);
			System.out.println("Corr a derecha");
			imprimir_arreglo(arr);
			System.out.println("Num insertado.");
			insertar_num(arr, num);
			imprimir_arreglo(arr);
			
			
		}
		catch(Exception exc) {
			System.out.println(exc);
		}
		
	}
	
	public static void corrimiento_der(int [] arr) {
		int index = MAX-1;
		
		while(index > 0) {
			
			arr[index] = arr[index-1];
			
			index--;
		}
	
	}
	
	public static void insertar_num(int [] arr, int num) {
		int index = 0;
		boolean frenar = false;
		
		while((index < MAX-1) && (frenar == false)) {
			
			if(arr[index] < num) {
				frenar = true;
				
			}
			
			index++;
		}
		
		arr[index] = num;
	}
	
	public static void ordenar_creciente(int [] arr) {
		
		//int aux = 0;
		
		
		int in1 = 1;
		int in2 = 0;
		int aux = 0;
		
		while(in1 < MAX) {
			
			while(in2 < MAX-1) {
				
				if(arr[in2] > arr[in2+1]) {
					aux = arr[in2];
					arr[in2] = arr[in2+1];
					arr[in2+1] = aux;
				}
				
				in2++;
			}
			
			if(in2 == MAX-1) {
				in2 = 0;
			}
			
			in1++;
		} 
		
		}
		
	
	public static void cargar_arreglo(int [] arr) {
		Random r = new Random();
		
		int index = 0;
		
		while(index < MAX) {
			
			arr[index] = (r.nextInt(MAXVALOR-MINVALOR+1)+MINVALOR);
			
			index++;
			
		}
		
	}
	
	public static void imprimir_arreglo(int [] arr) {
		int index = 0;
		
		System.out.print("Arreglo: ");
		
		while(index < MAX) {
			
			System.out.print("["+arr[index]+"]");
			
			index++;
		}
		
	}
	
	
	

	
	
	
}
